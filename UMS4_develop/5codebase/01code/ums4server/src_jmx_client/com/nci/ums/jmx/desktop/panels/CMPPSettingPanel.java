/*
 * CMPPSettingPanel.java
 *
 * Created on __DATE__, __TIME__
 */

package com.nci.ums.jmx.desktop.panels;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import com.nci.ums.jmx.ConsoleUtil;
import com.nci.ums.jmx.desktop.HotKey;
import com.nci.ums.jmx.desktop.bean.NumOnlyDocument;

/**
 * 
 * @author __USER__
 */
public class CMPPSettingPanel extends javax.swing.JPanel implements Setting ,HotKey{

	private String propFile = "/resources/cmppDirectChannel.props";

	/** Creates new form CMPPSettingPanel */
	public CMPPSettingPanel() {
		initComponents();
		portText.setDocument(new NumOnlyDocument(5));
		ipText1.setDocument(new NumOnlyDocument(3));
		ipText2.setDocument(new NumOnlyDocument(3));
		ipText3.setDocument(new NumOnlyDocument(3));
		ipText4.setDocument(new NumOnlyDocument(3));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ipText1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        portText = new javax.swing.JTextField();
        idText = new javax.swing.JTextField();
        ipText2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ipText3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ipText4 = new javax.swing.JTextField();
        pswText = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();

        jLabel1.setText(ConsoleUtil.getLocaleString("CMPP_IP:")); // NOI18N

        jLabel2.setText(ConsoleUtil.getLocaleString("CMPP_Port:")); // NOI18N

        jLabel3.setText(ConsoleUtil.getLocaleString("Login_ID:")); // NOI18N

        jLabel4.setText(ConsoleUtil.getLocaleString("Login_Password:")); // NOI18N

        jLabel5.setText(".");

        jLabel6.setText(".");

        jLabel7.setText(".");

        jLabel8.setText(ConsoleUtil.getLocaleString("CMPP_channel_parameters_setting")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel4))
                        .add(9, 9, 9)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pswText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .add(idText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ipText1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ipText2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ipText3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ipText4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(portText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {ipText1, ipText2, ipText3, ipText4}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .add(9, 9, 9)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE, false)
                    .add(jLabel1)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ipText1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ipText2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(ipText3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7)
                    .add(ipText4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(portText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(idText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(pswText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {idText, ipText2, ipText3, ipText4, portText, pswText}, org.jdesktop.layout.GroupLayout.VERTICAL);

    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idText;
    private javax.swing.JTextField ipText1;
    private javax.swing.JTextField ipText2;
    private javax.swing.JTextField ipText3;
    private javax.swing.JTextField ipText4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField portText;
    private javax.swing.JPasswordField pswText;
    // End of variables declaration//GEN-END:variables

	public void implSetting() throws IOException {
		String[] parameterNames = new String[] { "cmpp_ip", "cmpp_port",
				"cmpp_loginname", "cmpp_loginpsw" };
		StringBuffer ip = new StringBuffer();
		ip.append(ipText1.getText()).append(".").append(ipText2.getText())
				.append(".").append(ipText3.getText()).append(".").append(
						ipText4.getText());

		String[] parameterValues = new String[] { ip.toString(),
				portText.getText().trim(), idText.getText().trim(),
				new String(pswText.getPassword()) };
		String path = getClass().getResource(propFile).getPath();
		ConsoleUtil.replacePropFile(parameterNames, parameterValues, path);
	}

	public void initSetting() throws IOException {
		Properties props = new Properties();
		InputStream is = getClass().getResourceAsStream(propFile);
		props.load(is);
		String ip = props.getProperty("cmpp_ip");
		String port = props.getProperty("cmpp_port");
		String loginID = props.getProperty("cmpp_loginname");
		String psw = props.getProperty("cmpp_loginpsw");
		ConsoleUtil.setIPTo4TextField(ip, new javax.swing.JTextField[]{ipText1,ipText2,ipText3,ipText4});
		portText.setText(port);
		idText.setText(loginID);
		pswText.setText(psw);
		is.close();
	}

	public void addHotKey() {		
		
	}

}