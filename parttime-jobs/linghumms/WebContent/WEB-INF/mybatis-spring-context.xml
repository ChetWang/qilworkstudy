<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd 
http://www.springframework.org/schema/context 
classpath:/org/springframework/context/config/spring-context-3.2.xsd
http://www.springframework.org/schema/tx
classpath:/org/springframework/transaction/config/spring-tx-3.2.xsd">



	<!-- The first and easiest thing we have to do is let Spring know where 
		are our service beans. We will let Spring search them in our classpath so 
		we just need to provide it the base package to search in -->
	<context:component-scan base-package="org.vlg.linghu" />

	<context:property-placeholder location="/WEB-INF/classes/mybatis/generator.properties"
		ignore-unresolvable="false" />

	<!--c3p0 datasource configuration -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db_driverClass}"></property>
		<property name="jdbcUrl" value="${db_connectionURL}"></property>
		<property name="user" value="${db_userid}"></property>
		<property name="password" value="${db_password}"></property>
		<property name="initialPoolSize" value="${db_initialPoolSize}"></property>
		<property name="minPoolSize" value="${db_minPoolSize}"></property>
		<property name="maxPoolSize" value="${db_maxPoolSize}"></property>
		<property name="maxIdleTime" value="${db_maxIdleTime}"></property>
		<property name="acquireIncrement" value="${db_acquireIncrement}"></property>
		<property name="idleConnectionTestPeriod" value="${db_idleConnectionTestPeriod}"></property>
		<property name="acquireRetryAttempts" value="${db_acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${db_breakAfterAcquireFailure}"></property>
		<property name="testConnectionOnCheckout" value="${db_testConnectionOnCheckout}"></property>
		<property name="preferredTestQuery" value="${db_preferredTestQuery}"></property>
		<property name="autoCommitOnClose" value="${db_autoCommitOnClose}"></property>
	</bean>


	<tx:jta-transaction-manager />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>






	<!-- mybatis configuarations -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.vlg.linghu.mybatis.mapper" />
	</bean>

    <bean id="smsReceiver" class="org.vlg.linghu.sms.zte.client.ZteSMSReceiver"/>
    
    <bean id="vacNotifyHandler" class="org.vlg.linghu.vac.VACNotifyHandler"/>
	<bean id="smsSender" class="org.vlg.linghu.sms.SMSSender"/>
	<bean id="mmsSender" class="org.vlg.linghu.mms.MMSSender"/>
	<!-- listener should be added into web.xml -->
	<!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value>/WEB-iNF/daoContext.xml,/WEB-INF/applicationContext.xml 
		</param-value> </context-param> <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
		</listener> -->

</beans>