/*
 * LoginFrame.java
 *
 * Created on 2007��11��5��, ����7:13
 */
package com.ums.demo;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import com.nci.ums.v3.service.AppInfoV3;
import com.ums.db.UMSConn;

/**
 *
 * @author  Qil.Wong
 */
public class LoginFrame extends javax.swing.JFrame {

    private AppInfoV3 app;
    
    private boolean dbFlag = false;

    /** Creates new form LoginFrame */
    public LoginFrame() {
        initComponents();
        iniDBConn();
        ImageIcon icon = new ImageIcon(getClass().getResource("/icon/logo.png"));
        this.setIconImage(icon.getImage());
        centerOnScreen(this);
    }

    private void iniDBConn() {
        UMSConn.initConnection();
    }

    public static void centerOnScreen(Component component) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        component.setLocation(
                screenSize.width / 2 - (component.getWidth() / 2),
                screenSize.height / 2 - (component.getHeight() / 2));
    }

    private AppInfoV3 login() {

        String appID = this.AppIDField.getText().trim();
        String appPassword = new String(this.AppPasswordField.getPassword());
        AppInfoV3 appinfo = null;
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(UMSConn.getPoolName());
            dbFlag = true;
            PreparedStatement ps = conn.prepareStatement("SELECT * FROM APPLICATION WHERE APPID=? AND PASSWORD=? AND STATUS=" + AppInfoV3.ENABLED_STATUS);
            ps.setString(1, appID);
            ps.setString(2, appPassword);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                appinfo = new AppInfoV3();
                appinfo.setAppID(rs.getString("APPID"));
                appinfo.setAppName(rs.getString("APPNAME"));
                appinfo.setAppStatus(rs.getInt("STATUS"));
                appinfo.setChannelType(rs.getInt("CHANNELTYPE"));
                appinfo.setCompanyID(rs.getString("COMPANYID"));
                appinfo.setEmail(rs.getString("EMAIL"));
                appinfo.setIp(rs.getString("IP"));
                appinfo.setPort(rs.getInt("PORT"));
                appinfo.setSpNO(rs.getString("SPNO"));
                appinfo.setPassword(rs.getString("PASSWORD"));
            }
            ps.close();
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
                if(!dbFlag){
                    JOptionPane.showConfirmDialog(this, "Can NOT establish database connection, please check it later.", "Database Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                    this.setVisible(false);
                    UMSTestDemo demo = new UMSTestDemo();
                    centerOnScreen(demo);
                    demo.setTitle("UMS3.0 Test Demo -- Database Error!");
                    demo.setVisible(true);
                }
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return appinfo;
    }

    private void go() {
        this.setApp(this.login());
        if (this.getApp() == null) {
            JOptionPane.showConfirmDialog(this, "Incorrect AppID or Password, please check it again!", "Login Failed", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
        } else {
            this.setVisible(false);
            java.awt.EventQueue.invokeLater(new Runnable() {

                public void run() {
                    UMSTestDemo demo = new UMSTestDemo(app);
                    centerOnScreen(demo);
                    demo.setVisible(true);
                }
            });
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appIDLabel = new javax.swing.JLabel();
        AppIDField = new javax.swing.JTextField();
        appPasswordLabel = new javax.swing.JLabel();
        OKBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        AppPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Application Login");

        appIDLabel.setText("AppID:");

        AppIDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AppIDFieldKeyPressed(evt);
            }
        });

        appPasswordLabel.setText("Password:");

        OKBtn.setText("OK");
        OKBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        AppPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AppPasswordFieldKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(layout.createSequentialGroup()
                        .add(OKBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(exitBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(appIDLabel)
                            .add(appPasswordLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(AppIDField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .add(AppPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(50, 50, 50))
        );

        layout.linkSize(new java.awt.Component[] {AppIDField, AppPasswordField}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.linkSize(new java.awt.Component[] {OKBtn, exitBtn}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(39, 39, 39)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(appIDLabel)
                    .add(AppIDField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(appPasswordLabel)
                    .add(AppPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(OKBtn)
                    .add(exitBtn))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {AppIDField, AppPasswordField}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void OKBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKBtnActionPerformed
        go();      
}//GEN-LAST:event_OKBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
}//GEN-LAST:event_exitBtnActionPerformed

    private void AppIDFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AppIDFieldKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            go();
        }
    }//GEN-LAST:event_AppIDFieldKeyPressed

    private void AppPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AppPasswordFieldKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            go();
        }
    }//GEN-LAST:event_AppPasswordFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
            java.awt.EventQueue.invokeLater(new Runnable() {

                public void run() {
//                    new LoginFrame().setVisible(true);
                    AppInfoV3 app = new AppInfoV3();
                    app.setAppID("DESKTOPADMIN");
                    app.setPassword("monk");
                    UMSTestDemo demo = new UMSTestDemo(app);
                    LoginFrame.centerOnScreen(demo);
                    demo.setVisible(true);
                }
            });
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppIDField;
    private javax.swing.JPasswordField AppPasswordField;
    private javax.swing.JButton OKBtn;
    private javax.swing.JLabel appIDLabel;
    private javax.swing.JLabel appPasswordLabel;
    private javax.swing.JButton exitBtn;
    // End of variables declaration//GEN-END:variables
    public AppInfoV3 getApp() {
        return app;
    }

    public void setApp(AppInfoV3 app) {
        this.app = app;
    }
}
