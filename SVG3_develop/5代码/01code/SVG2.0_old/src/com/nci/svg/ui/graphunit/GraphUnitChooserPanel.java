/*
 * GraphUnitChooserPanel.java
 *
 * Created on 2008????6????20????, ????????9:53
 */
package com.nci.svg.ui.graphunit;

import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

import com.nci.svg.graphunit.NCIEquipSymbolBean;
import com.nci.svg.util.Constants;
import com.nci.svg.util.Utilities;

import fr.itris.glips.svgeditor.Editor;
import fr.itris.glips.svgeditor.resources.ResourcesManager;

/**
 * 
 * @author Qil.Wong
 */
public class GraphUnitChooserPanel extends javax.swing.JPanel {

    /**
     * ????????
     */
    private DefaultMutableTreeNode root = null;
    /**
     * ????????model
     */
    private DefaultTreeModel graphTreeModel = null;
    private NCIEquipSymbolBean selectedGraphUnit = null;
    
    Editor editor;

    /** Creates new form GraphUnitChooserPanel */
    public GraphUnitChooserPanel(Editor editor) {
        initComponents();
        this.editor = editor;
        graphUnitTree.setModel(null);
        graphUnitTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        previewCanvas.setRecenterOnResize(true);
        previewCanvas.setOpaque(true);
        previewCanvas.setBackground(Constants.THUMBNAIL_BACKGROUND);
    }

    /**
     * ????????????????????????
     */
    public void initGraphUnitTree() {
        clearDetails();
        root = new DefaultMutableTreeNode(ResourcesManager.bundle.getString("nci_graphunit_chooser_root"));
        graphTreeModel = new DefaultTreeModel(root);
        this.graphUnitTree.setCellRenderer(new GraphUnitTreeCellRenderer());
        this.graphUnitTree.setModel(graphTreeModel);
        LinkedHashMap<String, NCIEquipSymbolBean> map = editor.getGraphUnitManager().getSymbolMap_Type();
        ArrayList<String> typeList = editor.getGraphUnitManager().getSymbolsTypes();
        HashMap<String, DefaultMutableTreeNode> typeMap = new HashMap<String, DefaultMutableTreeNode>(
                (int) (editor.getGraphUnitManager().getSymbolsTypes().size() * 1.5));
        if (typeList != null) {
            DefaultMutableTreeNode typeNode = null;
            for (String type : typeList) {
                String[] strtmp = type.split("=");
                if(strtmp.length == 1)
                {
                    typeNode = new DefaultMutableTreeNode(type);
                    typeMap.put(type, typeNode);
                    root.add(typeNode);
                }
                else
                {
                    if(typeMap.get(strtmp[1]) == null)
                    {
                        typeNode = new DefaultMutableTreeNode(strtmp[1]);
                        typeMap.put(strtmp[1], typeNode);
                        root.add(typeNode);
                    }
                    typeNode = new DefaultMutableTreeNode(strtmp[0]);
                    typeMap.put(strtmp[0], typeNode);
                    typeMap.get(strtmp[1]).add(typeNode);
                }
            }
        }


        if (map != null) {
            Iterator<String> it = map.keySet().iterator();

            while (it.hasNext()) {
            	String key = it.next();
            	System.out.println(key);
                NCIEquipSymbolBean bean = map.get(key);
                typeMap.get(bean.getGraphUnitType()).add(new DefaultMutableTreeNode(bean));
            }
        }
        graphUnitTree.expandRow(0);
    }

    public NCIEquipSymbolBean getSelectedGraphUnit() {
        return selectedGraphUnit;
    }

    /**
     * ????????????????????
     */
    public void clear() {
        graphUnitTree.setModel(null);
        previewCanvas.setDocument(null);
        propertiesArea.setText("");
    }

    /**
     * ????????????????????????????????????????????????
     */
    private void clearDetails() {
        previewCanvas.setDocument(null);
        propertiesArea.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        graphUnitTree = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(ResourcesManager.bundle.getString("nci_titleBorder_properties")));
        jScrollPane2 = new javax.swing.JScrollPane();
        propertiesArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(ResourcesManager.bundle.getString("nci_titleBorder_preview")));
        previewCanvas = new org.apache.batik.swing.JSVGCanvas();
        cancelBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        graphUnitTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                graphUnitTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(graphUnitTree);

        propertiesArea.setColumns(20);
        propertiesArea.setEditable(false);
        propertiesArea.setRows(5);
        jScrollPane2.setViewportView(propertiesArea);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout previewCanvasLayout = new org.jdesktop.layout.GroupLayout(previewCanvas);
        previewCanvas.setLayout(previewCanvasLayout);
        previewCanvasLayout.setHorizontalGroup(
            previewCanvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 207, Short.MAX_VALUE)
        );
        previewCanvasLayout.setVerticalGroup(
            previewCanvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 147, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(previewCanvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(previewCanvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );

        cancelBtn.setText(ResourcesManager.bundle.getString("Cancel")); // NOI18N

        okBtn.setText(ResourcesManager.bundle.getString("OK")); // NOI18N
        okBtn.setEnabled(false);

        deleteButton.setText("É¾³ý");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 281, Short.MAX_VALUE)
                        .add(okBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cancelBtn)
                        .add(16, 16, 16))))
        );

        layout.linkSize(new java.awt.Component[] {cancelBtn, deleteButton, okBtn}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okBtn)
                    .add(cancelBtn)
                    .add(deleteButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void graphUnitTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_graphUnitTreeValueChanged
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) evt.getPath().getLastPathComponent();
    if (node.getUserObject() instanceof String) {
        okBtn.setEnabled(false);
        selectedGraphUnit = null;
        clearDetails();
    } else {
        selectedGraphUnit = (NCIEquipSymbolBean) node.getUserObject();
        okBtn.setEnabled(true);
        String uri = new File(new StringBuffer().append(Constants.NCI_SVG_SYMBOL_CACHE_DIR).append(selectedGraphUnit.getGraphUnitType()).append("/").append(selectedGraphUnit.getGraphUnitName()).append(Constants.NCI_SVG_EXTENDSION).toString()).toURI().toString();
        previewCanvas.setURI(uri);
        propertiesArea.setText(Utilities.getGraphUnitPropertyDesc(selectedGraphUnit));
    }

}//GEN-LAST:event_graphUnitTreeValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTree graphUnitTree;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton okBtn;
    private org.apache.batik.swing.JSVGCanvas previewCanvas;
    private javax.swing.JTextArea propertiesArea;
    // End of variables declaration//GEN-END:variables
    public javax.swing.JButton getCancelBtn() {
        return cancelBtn;
    }

    public javax.swing.JButton getOkBtn() {
        return okBtn;
    }

	public javax.swing.JTree getGraphUnitTree() {
		return graphUnitTree;
	}

    public javax.swing.JButton getDeleteButton() {
        return deleteButton;
    }
}
