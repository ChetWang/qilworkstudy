<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.vlg.linghu.mybatis.mapper.SmsReceiveMessageMapper" >
  <resultMap id="BaseResultMap" type="org.vlg.linghu.mybatis.bean.SmsReceiveMessage" >
    <id column="receive_id" property="receiveId" jdbcType="INTEGER" />
    <result column="receive_addtime" property="receiveAddtime" jdbcType="TIMESTAMP" />
    <result column="receive_text" property="receiveText" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="isOK" property="isok" jdbcType="BIT" />
    <result column="serviceID" property="serviceid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    receive_id, receive_addtime, receive_text, user_id, isOK, serviceID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_sms_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessageExample" >
    delete from e_sms_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessage" >
    insert into e_sms_receive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="receiveId != null" >
        receive_id,
      </if>
      <if test="receiveAddtime != null" >
        receive_addtime,
      </if>
      <if test="receiveText != null" >
        receive_text,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="isok != null" >
        isOK,
      </if>
      <if test="serviceid != null" >
        serviceID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="receiveId != null" >
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="receiveAddtime != null" >
        #{receiveAddtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveText != null" >
        #{receiveText,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isok != null" >
        #{isok,jdbcType=BIT},
      </if>
      <if test="serviceid != null" >
        #{serviceid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessageExample" resultType="java.lang.Integer" >
    select count(*) from e_sms_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update e_sms_receive
    <set >
      <if test="record.receiveId != null" >
        receive_id = #{record.receiveId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveAddtime != null" >
        receive_addtime = #{record.receiveAddtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveText != null" >
        receive_text = #{record.receiveText,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.isok != null" >
        isOK = #{record.isok,jdbcType=BIT},
      </if>
      <if test="record.serviceid != null" >
        serviceID = #{record.serviceid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update e_sms_receive
    set receive_id = #{record.receiveId,jdbcType=INTEGER},
      receive_addtime = #{record.receiveAddtime,jdbcType=TIMESTAMP},
      receive_text = #{record.receiveText,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      isOK = #{record.isok,jdbcType=BIT},
      serviceID = #{record.serviceid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessage" >
    update e_sms_receive
    <set >
      <if test="receiveAddtime != null" >
        receive_addtime = #{receiveAddtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveText != null" >
        receive_text = #{receiveText,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isok != null" >
        isOK = #{isok,jdbcType=BIT},
      </if>
      <if test="serviceid != null" >
        serviceID = #{serviceid,jdbcType=VARCHAR},
      </if>
    </set>
    where receive_id = #{receiveId,jdbcType=INTEGER}
  </update>
  <resultMap id="selectPageResult" extends="BaseResultMap" type="org.vlg.linghu.mybatis.bean.SmsReceiveMessage" >
    <!--
<association property="" column="" javaType="">
   <id column="" property="" jdbcType="" />
   <result column="" property="" jdbcType="" />
 </association>
-->
  </resultMap>
  <sql id="select_by_page_outter_where_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>    and   </if>  <if test="oredCriteria.size==0">     where   </if> 
  </sql>
  <sql id="select_by_page_inner_where_and_orderby_sql" >
      <if test="oredCriteria.size>0">     <if test="_parameter != null" > <include refid="Example_Where_Clause"/> </if>  </if>   <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <sql id="select_by_page_outter_orderby_sql" >
       <if test="orderByClause != null">    order by ${orderByClause}   </if> 
  </sql>
  <select id="selectPage" resultMap="selectPageResult" parameterType="org.vlg.linghu.mybatis.bean.SmsReceiveMessageExample" >
    select a.* from e_sms_receive a where a.receive_id in 
 (select top ${pageSize} receive_id from e_sms_receive 
<include refid="select_by_page_outter_where_sql"/> 
receive_id not in (select top ${skipRecordCount} receive_id from e_sms_receive  
<include refid="select_by_page_inner_where_and_orderby_sql"/> 
 ) 
<include refid="select_by_page_outter_orderby_sql"/> 
 )
  </select>
</mapper>