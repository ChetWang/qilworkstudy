/*
 * HuaWeiCMSettingPanel.java
 *
 * Created on __DATE__, __TIME__
 */

package com.nci.ums.jmx.desktop.panels;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import javax.swing.JTextField;

import org.jdom.Document;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.input.SAXBuilder;
import org.jdom.output.Format;
import org.jdom.output.XMLOutputter;

import com.nci.ums.jmx.ConsoleUtil;
import com.nci.ums.jmx.desktop.JMXLogger;
import com.nci.ums.jmx.desktop.bean.NumOnlyDocument;
//import com.nci.ums.util.Res;

/**
 * 
 * @author __USER__
 */
public class HuaWeiCMSettingPanel extends javax.swing.JPanel implements Setting {

	private Document originalDoc;
	private static int textArrSize = 10;// hw.xml总共有10个子元素
	private JTextField[] textArr;
	private static String xmlFile = "/resources/hw.xml";

	/** Creates new form HuaWeiCMSettingPanel */
	public HuaWeiCMSettingPanel() {
		initComponents();
		iniTextArr();
	}

	public void iniTextArr() {
		hostText1.setDocument(new NumOnlyDocument(3));
		hostText2.setDocument(new NumOnlyDocument(3));
		hostText3.setDocument(new NumOnlyDocument(3));
		hostText4.setDocument(new NumOnlyDocument(3));
		textArr = new JTextField[textArrSize];
		// textArr[0] is for ip,here is null
		textArr[1] = portText;
		portText.setDocument(new NumOnlyDocument(5));
		textArr[2] = hearInterText;
		hearInterText.setDocument(new NumOnlyDocument());
		textArr[3] = reconnInterText;
		reconnInterText.setDocument(new NumOnlyDocument());
		textArr[4] = heatbeatTimeoutText;
		heatbeatTimeoutText.setDocument(new NumOnlyDocument());
		textArr[5] = transTimeoutText;
		transTimeoutText.setDocument(new NumOnlyDocument());
		textArr[6] = srcText;
//		srcText.setDocument(new NumOnlyDocument());
		textArr[7] = versionText;
		textArr[8] = pswTxt;
		// textArr[9] is debug mode, it is a combobox object
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        hearInterText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        reconnInterText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        heatbeatTimeoutText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        transTimeoutText = new javax.swing.JTextField();
        srcText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        versionText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        modeCombo = new javax.swing.JComboBox();
        pswTxt = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        hostText1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        hostText2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hostText3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hostText4 = new javax.swing.JTextField();
        portText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setText(ConsoleUtil.getLocaleString("Huawei_API_Settings:")); // NOI18N

        jLabel7.setText(ConsoleUtil.getLocaleString("Heatbeat_Interval:")); // NOI18N

        jLabel8.setText(ConsoleUtil.getLocaleString("Reconnect_Interval:")); // NOI18N

        jLabel9.setText(ConsoleUtil.getLocaleString("Heartbeat_Noresponse_Timeout:")); // NOI18N

        jLabel10.setText(ConsoleUtil.getLocaleString("Transaction_Timeout:")); // NOI18N

        jLabel11.setText(ConsoleUtil.getLocaleString("Source_Address:")); // NOI18N

        jLabel12.setText(ConsoleUtil.getLocaleString("Source_Password:")); // NOI18N

        jLabel13.setText(ConsoleUtil.getLocaleString("Version:")); // NOI18N

        jLabel14.setText(ConsoleUtil.getLocaleString("Mode:")); // NOI18N

        modeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debug", "Run" }));

        jLabel2.setText(ConsoleUtil.getLocaleString("Host_IP:")); // NOI18N

        jLabel3.setText(".");

        jLabel4.setText(".");

        jLabel5.setText(".");

        jLabel6.setText(ConsoleUtil.getLocaleString("Port:")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel2)
                .add(14, 14, 14)
                .add(hostText1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hostText2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hostText3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hostText4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(23, 23, 23)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(portText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {hostText1, hostText2, hostText3, hostText4}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(hostText3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(hostText4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hostText1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hostText2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(portText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jLabel8)
                                    .add(jLabel11)
                                    .add(jLabel7))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(hearInterText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .add(srcText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .add(reconnInterText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                            .add(layout.createSequentialGroup()
                                .add(jLabel9)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(heatbeatTimeoutText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel14)
                            .add(jLabel13)
                            .add(jLabel12)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(versionText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .add(pswTxt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .add(transTimeoutText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .add(modeCombo, 0, 122, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(hearInterText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13)
                    .add(versionText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(reconnInterText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel14)
                    .add(modeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(srcText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12)
                    .add(pswTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(heatbeatTimeoutText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(transTimeoutText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {pswTxt, transTimeoutText}, org.jdesktop.layout.GroupLayout.VERTICAL);

    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField hearInterText;
    private javax.swing.JTextField heatbeatTimeoutText;
    private javax.swing.JTextField hostText1;
    private javax.swing.JTextField hostText2;
    private javax.swing.JTextField hostText3;
    private javax.swing.JTextField hostText4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox modeCombo;
    private javax.swing.JTextField portText;
    private javax.swing.JPasswordField pswTxt;
    private javax.swing.JTextField reconnInterText;
    private javax.swing.JTextField srcText;
    private javax.swing.JTextField transTimeoutText;
    private javax.swing.JTextField versionText;
    // End of variables declaration//GEN-END:variables

	public void implSetting() throws IOException {
		Element config = originalDoc.getRootElement(); // 得到根元素
		List ismg = config.getChildren(); // 得到根元素所有子元素的集合
		List ismgChildren = ((Element) ismg.get(0)).getChildren();
		Element current = null;
		for (int i = 0; i < ismgChildren.size(); i++) {
			current = (Element) ismgChildren.get(i);
			if (i != 0 && i != 9) {
				current.setText(textArr[i].getText());
			} else if (i == 0) {// IP setting
				StringBuffer ip = new StringBuffer();
				ip.append(hostText1.getText().trim()).append(".").append(
						hostText2.getText().trim()).append(".").append(
						hostText3.getText().trim()).append(".").append(
						hostText4.getText().trim());
				current.setText(ip.toString());
			} else if (i == 9) {// debug mode
				switch (modeCombo.getSelectedIndex()) {
				case 0:
					current.setText("true");
					break;
				case 1:
					current.setText("false");
					break;
				}
			}
		}
		Format format = Format.getCompactFormat();
		format.setEncoding("GBK");
		// 设置缩进字符串
		format.setIndent("  ");
		XMLOutputter XMLOut = new XMLOutputter(format);
		// 输出到文件
		String path = getClass().getResource(xmlFile).getPath();
		XMLOut.output(originalDoc, new FileOutputStream(path));
	}

	public void initSetting() throws IOException {
		InputStream ins = getClass().getResourceAsStream(xmlFile);
		SAXBuilder sb = new SAXBuilder();
		try {
			originalDoc = sb.build(ins);
		} catch (JDOMException e) {
			JMXLogger.logExceptionTrace(e);
		}
		Element config = originalDoc.getRootElement(); // 得到根元素
		List ismg = config.getChildren(); // 得到根元素所有子元素的集合
		List ismgChildren = ((Element) ismg.get(0)).getChildren();
		Element current = null;
		String value = null;
		for (int i = 0; i < ismgChildren.size(); i++) {
			current = (Element) ismgChildren.get(i);
			value = current.getText();
			if (i != 0 && i != 9) {
				textArr[i].setText(value);
			} else if (i == 0) {// IP setting
				ConsoleUtil.setIPTo4TextField(value, new JTextField[] {
						hostText1, hostText2, hostText3, hostText4 });
			} else if (i == 9) {// debug mode
				if (value.equals("true"))
					modeCombo.setSelectedIndex(0);
				else
					modeCombo.setSelectedIndex(1);
			}
		}
		ins.close();
	}
}