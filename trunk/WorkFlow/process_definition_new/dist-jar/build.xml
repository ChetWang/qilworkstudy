<?xml version="1.0" encoding="UTF-8"?>
<project name="workflow4.1" basedir="." default="sign-wf">
	<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	<property name="src.jideoos" value="jide-oos/src" />
	<property name="src.workflow.definition" value="../src" />
	<property name="src.workflow.start" value="../src_start" />
	<property name="src.workflow.smartform" value="../src_smartform" />
	<property name="src.workflow.commonbeans" value="../../workflow_common_beans/src" />

	<property name="source.definition.level" value="1.5" />
	<property name="source.jideoos.level" value="1.5" />
	<property name="source.start.level" value="1.3" />
	<property name="source.commonbeans.level" value="1.4" />
	<property name="target.definition.level" value="1.5" />
	<property name="target.jideoos.level" value="1.5" />
	<property name="target.start.level" value="1.3" />
	<property name="target.commonbeans.level" value="1.4" />


	<property name="applet_signer_alias" value="ncisvg" />
	<property name="applet_signer_storepass" value="88888888" />
	<property name="applet_signer_keystore" value="cert/ncisvg.keystore" />


	<property name="build.classes.dir" value="classes" />
	<property name="build.start.dir" value="classes/start" />
	<property name="build.commonbeans.dir" value="classes/commonbeans" />
	<property name="build.definition.dir" value="classes/definition" />
	<property name="dist.dir" value="jars" />
	<property name="templates.path" value="templates" />

	<property name="build.version" value="4.1" />

	<property name="main.class" value="com.nci.domino.main.MainJFrame" />


	<!-- **************************************************************** -->
	<target name="init" description="initialize the building directories">
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.commonbeans.dir}" />
		<mkdir dir="${build.definition.dir}" />
		<mkdir dir="${build.start.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="clean" description="clean compile and distribute directories">
		<delete dir="${build.classes.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="compile-commonbeans" depends="init" description="compile common beans">
		<echo>Compiling commnon beans</echo>
		<javac source="${source.commonbeans.level}" target="${target.commonbeans.level}" fork="false" includeantruntime="false" deprecation="false" nowarn="true" srcdir="${src.workflow.commonbeans}" destdir="${build.commonbeans.dir}" debug="on">
		</javac>
		<copy todir="${build.commonbeans.dir}">
			<fileset dir="${src.workflow.commonbeans}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<echo>Compiling complete.</echo>
	</target>

	<target name="compile-jideoos" depends="init" description="compile jide oos">
		<echo>Compiling jide oos</echo>
		<javac source="${source.jideoos.level}" target="${target.jideoos.level}" fork="false" includeantruntime="false" deprecation="false" nowarn="true" srcdir="${src.jideoos}" destdir="${build.definition.dir}" debug="false">
		</javac>
		<copy todir="${build.definition.dir}">
			<fileset dir="${src.jideoos}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<echo>Compiling complete.</echo>
	</target>

	<target name="compile-start" depends="init" description="compile workflow start">
		<echo>Compiling workflow startup classes</echo>
		<javac source="${source.start.level}" target="${target.start.level}" fork="false" includeantruntime="false" deprecation="false" nowarn="true" srcdir="${src.workflow.start}" destdir="${build.start.dir}" debug="on">
		</javac>
		<copy todir="${build.start.dir}">
			<fileset dir="${src.workflow.start}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<echo>Compiling complete.</echo>
	</target>

	<target name="compile-definition" depends="compile-commonbeans,compile-jideoos" description="compile workflow definition">
		<echo>Compiling workflow definition classes</echo>
		<javac source="${source.definition.level}" target="${target.definition.level}" fork="false" includeantruntime="false" deprecation="false" nowarn="true" srcdir="${src.workflow.definition}" destdir="${build.definition.dir}" debug="on">
			<classpath>
				<path location="${build.commonbeans.dir}" />
				<path location="${build.definition.dir}" />
			</classpath>
		</javac>
		<copy todir="${build.definition.dir}">
			<fileset dir="${src.workflow.definition}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<echo>Compiling complete.</echo>
	</target>

	<target name="dist-start" depends="compile-start">
		<echo>distributing workflow start...</echo>
		<jar jarfile="${dist.dir}/wf-start.jar" basedir="${build.start.dir}">
			<manifest>
				<attribute name="WorkflowVersion" value="${build.version}" />
				<attribute name="Created-By" value="${user.name}" />
				<attribute name="Target-JavaLevel" value="${target.start.level}" />
			</manifest>
		</jar>
		<echo>distributing editor finished.</echo>
	</target>

	<target name="dist-commonbeans" depends="compile-commonbeans">
		<echo>distributing workflow commonbeans...</echo>
		<jar jarfile="${dist.dir}/wf-commonbeans.jar" basedir="${build.commonbeans.dir}">
			<manifest>
				<attribute name="WorkflowVersion" value="${build.version}" />
				<attribute name="Created-By" value="${user.name}" />
				<attribute name="Target-JavaLevel" value="${target.commonbeans.level}" />
			</manifest>
		</jar>
		<copy file="${dist.dir}/wf-commonbeans.jar" tofile="${dist.dir}/nci-wofo-commons.jar"/>
		<echo>distributing workflow commonbeans complete.</echo>
	</target>

	<target name="dist-definition" depends="compile-definition">
		<echo>distributing workflow definition...</echo>
		<jar jarfile="${dist.dir}/wf.jar" basedir="${build.definition.dir}">
			<manifest>
				<attribute name="WorkflowVersion" value="${build.version}" />
				<attribute name="Created-By" value="${user.name}" />
				<attribute name="Target-JavaLevel" value="${target.definition.level}" />
			</manifest>
		</jar>
		<echo>distributing workflow definition complete.</echo>
	</target>

	<target name="dist">
		<ant target="dist-start" />
		<ant target="dist-commonbeans" />
		<ant target="dist-definition" />
	</target>

	<target name="run" depends="compile-definition,compile-start">
		<echo>Start running...</echo>
		<java classname="${main.class}" fork="true" maxmemory="128m">
			<classpath>
				<path location="${build.commonbeans.dir}" />
				<path location="${build.definition.dir}" />
				<path location="${build.start.dir}" />
			</classpath>
		</java>
	</target>

	<!--签名 -->
	<target name="sign-wf" depends="dist">
		<echo>Start sign...</echo>
		<signjar alias="${applet_signer_alias}" storepass="${applet_signer_storepass}" keystore="${applet_signer_keystore}" jar="${dist.dir}/wf.jar" />
		<signjar alias="${applet_signer_alias}" storepass="${applet_signer_storepass}" keystore="${applet_signer_keystore}" jar="${dist.dir}/wf-start.jar" />
		<copy todir="${dist.dir}">
			<fileset dir="${templates.path}">
				<include name="wf.html" />
			</fileset>
		</copy>
		<echo>Sign complete</echo>
	</target>

	<target name="ob" depends="dist">
		<taskdef resource="proguard/ant/task.properties" classpath="proguard/proguard.jar" />
		<proguard configuration="proguard/wf.pro" />
	</target>

    <target name="sign-ob" depends="ob">
	    <signjar alias="${applet_signer_alias}" storepass="${applet_signer_storepass}" keystore="${applet_signer_keystore}" jar="${dist.dir}/wf.jar" />
		<signjar alias="${applet_signer_alias}" storepass="${applet_signer_storepass}" keystore="${applet_signer_keystore}" jar="${dist.dir}/wf-ob.jar" />
		
		<signjar alias="${applet_signer_alias}" storepass="${applet_signer_storepass}" keystore="${applet_signer_keystore}" jar="${dist.dir}/wf-start.jar" />
		<copy todir="${dist.dir}">
			<fileset dir="${templates.path}">
				<include name="wf.html" />
				<include name="wf-ob.html" />
			</fileset>
		</copy>
	</target>

</project>