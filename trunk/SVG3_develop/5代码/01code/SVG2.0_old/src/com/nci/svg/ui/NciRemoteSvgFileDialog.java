/*
 * NciRemoteSvgFileDialog.java
 *
 * Created on 2008年8月20日, 上午9:02
 */

package com.nci.svg.ui;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import fr.itris.glips.svgeditor.Editor;
import fr.itris.glips.svgeditor.resources.ResourcesManager;

import com.nci.svg.bean.*;
import com.nci.svg.graphunit.NCIEquipSymbolBean;
import com.nci.svg.ui.graphunit.GraphUnitTreeCellRenderer;
import com.nci.svg.util.Constants;
import com.nci.svg.util.ServletActionConstants;
import com.nci.svg.util.Utilities;

/**
 *
 * @author  yx.nci
 */
public class NciRemoteSvgFileDialog extends javax.swing.JDialog {

    private Editor editor = null;
    /** Creates new form NciRemoteSvgFileDialog */
    public NciRemoteSvgFileDialog(java.awt.Frame parent, boolean modal,Editor editor) {
        
        super(parent, modal);
        
        initComponents();
        this.editor = editor;
        this.setLocationRelativeTo(editor.findParentFrame());
    }

    @SuppressWarnings("unchecked")
    public void initData()
    {
        TreeFile.setModel(null);
        ArrayList<RemoteFileInfoBean> list = null;
        StringBuffer baseURL = new StringBuffer();
        baseURL.append((String) editor.getGCParam("appRoot")).append(
                (String) editor.getGCParam("servletPath")).append(
                "?action=").append("getSvgFileListOld");

        try {
            list = (ArrayList<RemoteFileInfoBean>) Utilities.communicateWithURL(baseURL
                    .toString(), null);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("所有标准图");//ResourcesManager.bundle.getString("nci_standardfile_chooser_root"));
        DefaultTreeModel graphTreeModel = new DefaultTreeModel(root);
        TreeFile.setModel(graphTreeModel);
        String strFileType = "";
        String strAreaType ="";
        String strVoltage="";
        DefaultMutableTreeNode FiletypeNode = null;
        DefaultMutableTreeNode AreaTypeNode = null;
        DefaultMutableTreeNode VoltageNode = null;
        for(RemoteFileInfoBean bean:list)
        {
            if(bean.getStrFileType() == null ||bean.getStrArea() ==null ||bean.getStrVoltage() == null )
                continue;
            if(!bean.getStrFileType().equals(strFileType))
            {
                FiletypeNode = new DefaultMutableTreeNode(bean.getStrFileType());
                strFileType = bean.getStrFileType();
                root.add(FiletypeNode);
                strAreaType="";
                strVoltage="";
            }
            if(!bean.getStrArea().equals(strAreaType))
            {
                AreaTypeNode = new DefaultMutableTreeNode(bean.getStrArea());
                strAreaType = bean.getStrArea();
                FiletypeNode.add(AreaTypeNode);
                strVoltage="";
            }
            if(!bean.getStrVoltage().equals(strVoltage))
            {
                VoltageNode = new DefaultMutableTreeNode(bean.getStrVoltage());
                strVoltage = bean.getStrVoltage();
                AreaTypeNode.add(VoltageNode);
            }
            
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(bean.getStrFileDesc());
            node.setUserObject(bean);
            VoltageNode.add(node);
        }
        TreeFile.expandRow(0);
    }
    
    private RemoteFileInfoBean fileBean=null;
    private void treeFileValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_graphUnitTreeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) evt.getPath().getLastPathComponent();
        if (node.getUserObject() instanceof RemoteFileInfoBean) {
            fileBean = (RemoteFileInfoBean)node.getUserObject();
        } 

    }
    private void openFile()
    {
        editor.getSvgSession().openRemoteSVGFileOld("", fileBean.getStrFileName());
        dispose();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TreeFile = new javax.swing.JTree();
        ButtonOK = new javax.swing.JButton();
        ButtonCanel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TreeFile.setModel(null);
        jScrollPane1.setViewportView(TreeFile);

        ButtonOK.setText("打开");
        ButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOKActionPerformed(evt);
            }
        });

        ButtonCanel.setText("取消");
        ButtonCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCanelActionPerformed(evt);
            }
        });
        TreeFile.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeFileValueChanged(evt);
            }
        });
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(ButtonOK)
                        .add(18, 18, 18)
                        .add(ButtonCanel)
                        .add(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 243, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ButtonOK)
                    .add(ButtonCanel))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void ButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOKActionPerformed
// TODO add your handling code here:
    openFile();
}//GEN-LAST:event_ButtonOKActionPerformed

private void ButtonCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCanelActionPerformed
// TODO add your handling code here:
    dispose();
}//GEN-LAST:event_ButtonCanelActionPerformed


 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCanel;
    private javax.swing.JButton ButtonOK;
    private javax.swing.JTree TreeFile;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
